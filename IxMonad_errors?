use IxMonad.ixbind
pub trait IxMonad[m: Type -> Type -> Type -> Eff -> Type ] {
    pub def ixreturn(e: a) : m[i, i, a, e]
    pub def ixbind(e: m[i, j, a, e1], f: (a -> m[j, k, b, e2] \ e3)) : m[i, k, b, e1 + e2 + e3]
    pub def ixcompose(e1: m[i, j, a, e1], e2: m[j, k, b, e2]) : m[i, k, b, e1 + e2] = 
        ixbind(e1, _ -> c_e(e2))
}

mod IxMonad{
    pub def >>>=[m:Type -> Type -> Type -> Eff -> Type, 
                    i: Type,j: Type,a: Type, e1: Eff, k: Type,b: Type,e2: Type, e3: Eff]
                    (e: m[i, j, a, e1], f: (a -> m[j, k, b, e2] \ e3  )) : m[i, k, b, e1 + e2 + e3]  with IxMonad[m] = ixbind(e,f)
    pub def >>>|(e1: m[i, j, a, e1], e2: m[j, k, b, e2]) : m[i, k, b, e1+ e2]  with IxMonad[m] = ixcompose(e1,e2)
}